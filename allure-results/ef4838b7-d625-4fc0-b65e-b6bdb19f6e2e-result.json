{"name": "test_open_home", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_x5_home_page.TestTitleMenuX5 object at 0x0000012EC4DA2210>\n\n    @allure.feature(\"test_open_home\")\n    @allure.story(\"existence\")\n    @pytest.mark.smoke\n    def test_open_home(self):\n        self.home_page.open()\n>       self.home_page.is_opened_1()\n\ntests\\test_x5_home_page.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\home_page.py:31: in is_opened_1\n    self.wait.until(EC.url_to_be(self.HOST_URL))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8797f1b1eb6c4e7892745db40c4d8811\")>, method = <function url_to_be.<locals>._predicate at 0x0000012EC4DAB060>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "steps": [{"name": "Открываем ссылку", "status": "passed", "start": 1737668799868, "stop": 1737668800305}, {"name": "Проверка что страница открылась", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"D:\\pythonProject\\X5_Group\\venv\\Lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"D:\\pythonProject\\X5_Group\\pages\\home_page.py\", line 31, in is_opened_1\n    self.wait.until(EC.url_to_be(self.HOST_URL))\n  File \"D:\\pythonProject\\X5_Group\\venv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "start": 1737668800305, "stop": 1737668810460}], "start": 1737668799868, "stop": 1737668810550, "uuid": "bd1d60c1-8d7a-42f0-ad5c-6abee50b8834", "historyId": "1d3f48b2b9aafcab078dcdd1e5297bba", "testCaseId": "1d3f48b2b9aafcab078dcdd1e5297bba", "fullName": "tests.test_x5_home_page.TestTitleMenuX5#test_open_home", "labels": [{"name": "feature", "value": "test_open_home"}, {"name": "story", "value": "existence"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_x5_home_page"}, {"name": "subSuite", "value": "TestTitleMenuX5"}, {"name": "host", "value": "Kolesnik-DN"}, {"name": "thread", "value": "12184-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_x5_home_page"}]}